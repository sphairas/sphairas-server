#!/bin/bash
#
set -e

SERVER_KEY=${SSL}/server.key
SERVER_KEY_PASSWORD='changeit'
SERVER_CERT=${SSL}/server.crt

read -p "Please enter your name: " NAME
while true; do
    read -s -p "Password: " PASSWORD
    echo
    read -s -p "Password (again): " PASSWORD2
    echo
    [ "$PASSWORD" = "$PASSWORD2" ] && break
    echo "Please try again"
done

echo "Create a new signed admin key for $SPHAIRAS_PROVIDER."
#if [ -z "$1" ]; then
#    echo "No name supplied."
#    CN="$SPHAIRAS_PROVIDER Admin"
#else
#    CN="$1"
#fi
if [ -z "$NAME" ]; then
    echo "No name supplied."
    CN="$SPHAIRAS_PROVIDER Admin"
else
    CN="$NAME"
fi

openssl req -newkey rsa:4096 -keyout ${PAYARA_PATH}/admin.key -nodes -out ${PAYARA_PATH}/admin.csr -days 365 -subj "/CN=$CN/C=$SPHAIRAS_COUNTRY/ST=$SPHAIRAS_STATE/L=$SPHAIRAS_LOCATION/O=$SPHAIRAS_SCHOOLNAME" 
#Sign the key
openssl x509 -req -CA $SERVER_CERT -CAkey $SERVER_KEY -in ${PAYARA_PATH}/admin.csr -passin pass:$SERVER_KEY_PASSWORD -out ${PAYARA_PATH}/admin.cer -days 365 -CAcreateserial
#Create PKCS12
#openssl pkcs12 -export -in ${PAYARA_PATH}/admin.cer -inkey ${PAYARA_PATH}/admin.key -out ${SSL}/admin.p12 -passout pass:'changeit' -chain -CAfile $SERVER_CERT -name $SPHAIRAS_PROVIDER
openssl pkcs12 -export -in ${PAYARA_PATH}/admin.cer -inkey ${PAYARA_PATH}/admin.key -out ${PAYARA_PATH}/admin.p12 -passout pass:$PASSWORD -chain -CAfile $SERVER_CERT -name ${SPHAIRAS_PROVIDER}
rm ${PAYARA_PATH}/admin.key
rm ${PAYARA_PATH}/admin.csr
rm ${PAYARA_PATH}/admin.cer

echo "To copy your private key to your current console use \"docker cp $(hostname):${PAYARA_PATH}/admin.p12 .\""
